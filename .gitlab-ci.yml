stages:
  - build
  - test
  - docker
  - deploy

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  DOCKER_REGISTRY: "$CI_REGISTRY/saas-clinic"
  DOCKER_IMAGE_TAG: "latest"

# ---------------- Build .NET projects ----------------
build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - |
      for sln in Services/*/*.sln; do
        echo "Restoring and building $sln..."
        dotnet restore "$sln"
        dotnet build "$sln" --configuration Release
      done

# ---------------- Run tests ----------------
test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:9.0
  script:
    - |
      for sln in Services/*/*.sln; do
        echo "Running tests for $sln..."
        dotnet test "$sln" --no-build --verbosity normal || exit 1
      done

# ---------------- Build & Push Docker images ----------------
docker_build_backend:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:dind
  script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - |
      for service in authservice clinicmanagementservice doctormanagementservice patientmanagementservice rdvmanagementservice consultationmanagementservice facturationservice reportingservice notificationservice; do
        echo "Building and pushing $service..."
        docker build -t $DOCKER_REGISTRY/$service:$DOCKER_IMAGE_TAG ./Services/$service
        docker push $DOCKER_REGISTRY/$service:$DOCKER_IMAGE_TAG
      done

docker_build_frontend:
  stage: docker
  image: docker:24.0.5
  services:
    - docker:dind
  script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -t $DOCKER_REGISTRY/Frontend:$DOCKER_IMAGE_TAG ./Frontend
    - docker push $DOCKER_REGISTRY/Frontend:$DOCKER_IMAGE_TAG

# ---------------- Deploy with Docker Compose ----------------
deploy:
  stage: deploy
  image: docker/compose:2.21.2
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker-compose -f docker-compose.yml pull
    - docker-compose -f docker-compose.yml up -d --remove-orphans

